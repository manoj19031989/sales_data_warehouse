-- Step 1: Create Database
CREATE DATABASE sales_data_warehouse;

-- Step 2: Use the Database (for MySQL)
USE sales_data_warehouse;

-- Step 3: Create Tables

-- Customers Table
CREATE TABLE customers (
    customer_id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    email VARCHAR(100) UNIQUE,
    signup_date DATE
);

-- Products Table
CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

-- Orders Table (Fact Table)
CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

-- Order Details Table
CREATE TABLE order_details (
    order_detail_id SERIAL PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    price DECIMAL(10,2),
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- Step 4: Insert Sample Data

INSERT INTO customers (name, email, signup_date) VALUES
('Alice Johnson', 'alice@example.com', '2023-01-15'),
('Bob Smith', 'bob@example.com', '2023-02-20');

INSERT INTO products (name, category, price) VALUES
('Laptop', 'Electronics', 999.99),
('Phone', 'Electronics', 499.99),
('Headphones', 'Accessories', 99.99);

INSERT INTO orders (customer_id, order_date, total_amount) VALUES
(1, '2024-03-01', 1499.98),
(2, '2024-03-05', 599.99);

INSERT INTO order_details (order_id, product_id, quantity, price) VALUES
(1, 1, 1, 999.99),
(1, 3, 5, 99.99),
(2, 2, 1, 499.99);

-- Step 5: SQL Queries for Analysis

-- Total Sales by Category
SELECT p.category, SUM(od.quantity * od.price) AS total_sales
FROM order_details od
JOIN products p ON od.product_id = p.product_id
GROUP BY p.category
ORDER BY total_sales DESC;

-- Top 10 Best-Selling Products
SELECT p.name, SUM(od.quantity) AS total_sold
FROM order_details od
JOIN products p ON od.product_id = p.product_id
GROUP BY p.name
ORDER BY total_sold DESC
LIMIT 10;

-- Customer Retention Analysis
SELECT c.name, COUNT(o.order_id) AS total_orders
FROM customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.name
ORDER BY total_orders DESC;
